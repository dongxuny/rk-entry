definitions:
  rkentry.ApisResponse:
    properties:
      entries:
        items:
          $ref: '#/definitions/rkentry.ApisResponseElement'
        type: array
    type: object
  rkentry.ApisResponseElement:
    properties:
      entryName:
        type: string
      gw:
        type: string
      method:
        type: string
      path:
        type: string
      port:
        type: integer
      swUrl:
        type: string
    type: object
  rkentry.CertsResponse:
    properties:
      entries:
        items:
          $ref: '#/definitions/rkentry.CertsResponseElement'
        type: array
    type: object
  rkentry.CertsResponseElement:
    properties:
      clientCert:
        type: string
      clientCertPath:
        type: string
      clientKeyPath:
        type: string
      endpoint:
        type: string
      entryDescription:
        type: string
      entryName:
        type: string
      entryType:
        type: string
      locale:
        type: string
      provider:
        type: string
      serverCert:
        type: string
      serverCertPath:
        type: string
      serverKeyPath:
        type: string
    type: object
  rkentry.ConfigsResponse:
    properties:
      entries:
        items:
          $ref: '#/definitions/rkentry.ConfigsResponseElement'
        type: array
    type: object
  rkentry.ConfigsResponseElement:
    properties:
      entryDescription:
        type: string
      entryMeta:
        additionalProperties: true
        type: object
      entryName:
        type: string
      entryType:
        type: string
      path:
        type: string
    type: object
  rkentry.CpuInfo:
    properties:
      cacheSize:
        type: integer
      cpuUsedPercentage:
        type: number
      logicalCoreCount:
        type: integer
      mhz:
        type: number
      modelName:
        type: string
      physicalCoreCount:
        type: integer
      vendorId:
        type: string
    type: object
  rkentry.DepResponse:
    properties:
      goMod:
        type: string
    type: object
  rkentry.EntriesResponse:
    properties:
      entries:
        additionalProperties:
          items:
            $ref: '#/definitions/rkentry.EntriesResponseElement'
          type: array
        type: object
    type: object
  rkentry.EntriesResponseElement:
    properties:
      entryDescription:
        type: string
      entryMeta:
        $ref: '#/definitions/rkentry.Entry'
      entryName:
        type: string
      entryType:
        type: string
    type: object
  rkentry.Entry:
    type: object
  rkentry.GcResponse:
    properties:
      memStatAfterGc:
        $ref: '#/definitions/rkentry.MemInfo'
      memStatBeforeGc:
        $ref: '#/definitions/rkentry.MemInfo'
    type: object
  rkentry.GitResponse:
    properties:
      branch:
        type: string
      commitDate:
        type: string
      commitId:
        type: string
      commitIdAbbr:
        type: string
      commitSub:
        type: string
      committerEmail:
        type: string
      committerName:
        type: string
      package:
        type: string
      tag:
        type: string
      url:
        type: string
    type: object
  rkentry.GoEnvInfo:
    properties:
      goArch:
        type: string
      goos:
        type: string
      routinesCount:
        type: integer
      startTime:
        type: string
      upTimeSec:
        type: integer
      upTimeStr:
        type: string
      version:
        type: string
    type: object
  rkentry.GwErrorMappingResponse:
    properties:
      mapping:
        additionalProperties:
          $ref: '#/definitions/rkentry.GwErrorMappingResponseElement'
        type: object
    type: object
  rkentry.GwErrorMappingResponseElement:
    properties:
      grpcCode:
        type: integer
      grpcText:
        type: string
      restCode:
        type: integer
      restText:
        type: string
    type: object
  rkentry.HealthyResponse:
    properties:
      healthy:
        type: boolean
    type: object
  rkentry.LicenseResponse:
    properties:
      license:
        type: string
    type: object
  rkentry.LogsResponse:
    properties:
      entries:
        additionalProperties:
          items:
            $ref: '#/definitions/rkentry.LogsResponseElement'
          type: array
        type: object
    type: object
  rkentry.LogsResponseElement:
    properties:
      entryDescription:
        type: string
      entryMeta:
        $ref: '#/definitions/rkentry.Entry'
      entryName:
        type: string
      entryType:
        type: string
      errorOutputPaths:
        items:
          type: string
        type: array
      outputPaths:
        items:
          type: string
        type: array
    type: object
  rkentry.MemInfo:
    properties:
      forceGcCount:
        type: integer
      gcCountTotal:
        type: integer
      lastGcTimestamp:
        type: string
      memAllocByte:
        type: integer
      memUsedMb:
        type: integer
      memUsedPercentage:
        type: number
      sysAllocByte:
        type: integer
    type: object
  rkentry.NetInfo:
    properties:
      netInterface:
        items:
          $ref: '#/definitions/rkentry.NetInterface'
        type: array
    type: object
  rkentry.NetInterface:
    properties:
      addrs:
        description: A list of unicast interface addresses for a specific interface.
        items:
          type: string
        type: array
      flags:
        description: e.g., FlagUp, FlagLoopback, FlagMulticast
        items:
          type: string
        type: array
      hardwareAddr:
        description: IEEE MAC-48, EUI-48 and EUI-64 form
        type: string
      mtu:
        description: maximum transmission unit
        type: integer
      multicastAddrs:
        description: A list of multicast, joined group addresses for a specific interface
        items:
          type: string
        type: array
      name:
        description: e.g., "en0", "lo0", "eth0.100"
        type: string
    type: object
  rkentry.OsInfo:
    properties:
      arch:
        type: string
      hostname:
        type: string
      os:
        type: string
    type: object
  rkentry.ProcessInfo:
    properties:
      appName:
        type: string
      az:
        type: string
      description:
        type: string
      docsUrl:
        items:
          type: string
        type: array
      domain:
        type: string
      gid:
        type: string
      homeUrl:
        type: string
      iconUrl:
        type: string
      keywords:
        items:
          type: string
        type: array
      maintainers:
        items:
          type: string
        type: array
      realm:
        type: string
      region:
        type: string
      startTime:
        type: string
      uid:
        type: string
      upTimeSec:
        type: integer
      upTimeStr:
        type: string
      username:
        type: string
      version:
        type: string
    type: object
  rkentry.ReadmeResponse:
    properties:
      readme:
        type: string
    type: object
  rkentry.ReqMetricsRK:
    properties:
      count:
        type: integer
      elapsedNanoP50:
        type: number
      elapsedNanoP90:
        type: number
      elapsedNanoP99:
        type: number
      elapsedNanoP999:
        type: number
      grpcMethod:
        type: string
      grpcService:
        type: string
      resCode:
        items:
          $ref: '#/definitions/rkentry.ResCodeRK'
        type: array
      restMethod:
        type: string
      restPath:
        type: string
    type: object
  rkentry.ReqResponse:
    properties:
      metrics:
        items:
          $ref: '#/definitions/rkentry.ReqMetricsRK'
        type: array
    type: object
  rkentry.ResCodeRK:
    properties:
      count:
        type: integer
      resCode:
        type: string
    type: object
  rkentry.SysResponse:
    properties:
      cpuInfo:
        $ref: '#/definitions/rkentry.CpuInfo'
      goEnvInfo:
        $ref: '#/definitions/rkentry.GoEnvInfo'
      memInfo:
        $ref: '#/definitions/rkentry.MemInfo'
      netInfo:
        $ref: '#/definitions/rkentry.NetInfo'
      osInfo:
        $ref: '#/definitions/rkentry.OsInfo'
    type: object
info:
  contact:
    email: lark@pointgoal.io
    name: rk-dev
    url: https://github.com/rookie-ninja/rk-entry
  description: This is builtin RK common service.
  license:
    name: Apache 2.0 License
    url: https://github.com/rookie-ninja/rk-entry/blob/master/LICENSE.txt
  title: RK Common Service
  version: "1.0"
paths:
  /rk/v1/apis:
    get:
      operationId: "13"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rkentry.ApisResponse'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      - JWT: []
      summary: List API
  /rk/v1/certs:
    get:
      operationId: "7"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rkentry.CertsResponse'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      - JWT: []
      summary: List CertEntry
  /rk/v1/configs:
    get:
      operationId: "4"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rkentry.ConfigsResponse'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      - JWT: []
      summary: List ConfigEntry
  /rk/v1/deps:
    get:
      operationId: "9"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rkentry.DepResponse'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      - JWT: []
      summary: List dependencies related application
  /rk/v1/entries:
    get:
      operationId: "6"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rkentry.EntriesResponse'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      - JWT: []
      summary: List all Entry
  /rk/v1/gc:
    get:
      operationId: "2"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rkentry.GcResponse'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      - JWT: []
      summary: Trigger Gc
  /rk/v1/git:
    get:
      operationId: "12"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rkentry.GitResponse'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      - JWT: []
      summary: Get Git information.
  /rk/v1/gwErrorMapping:
    get:
      operationId: "16"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rkentry.GwErrorMappingResponse'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      - JWT: []
      summary: List error mapping between gRPC and grpc-gateway
  /rk/v1/healthy:
    get:
      operationId: "1"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rkentry.HealthyResponse'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      - JWT: []
      summary: Get application healthy status
  /rk/v1/info:
    get:
      operationId: "3"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rkentry.ProcessInfo'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      - JWT: []
      summary: Get application and process info
  /rk/v1/license:
    get:
      operationId: "10"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rkentry.LicenseResponse'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      - JWT: []
      summary: Get license related application
  /rk/v1/logs:
    get:
      operationId: "8"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rkentry.LogsResponse'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      - JWT: []
      summary: List logger related entries
  /rk/v1/readme:
    get:
      operationId: "11"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rkentry.ReadmeResponse'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      - JWT: []
      summary: Get README file.
  /rk/v1/req:
    get:
      operationId: "14"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rkentry.ReqResponse'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      - JWT: []
      summary: List prometheus metrics of requests
  /rk/v1/sys:
    get:
      operationId: "5"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rkentry.SysResponse'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      - JWT: []
      summary: Get OS Stat
  /rk/v1/tv:
    get:
      operationId: "15"
      produces:
      - text/html
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: Get HTML page of /tv
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: X-API-Key
    type: apiKey
  BasicAuth:
    type: basic
  JWT:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
