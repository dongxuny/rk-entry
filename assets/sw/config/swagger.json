{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is builtin RK common service.",
        "title": "RK Common Service",
        "contact": {
            "name": "rk-dev",
            "url": "https://github.com/rookie-ninja/rk-entry",
            "email": "lark@pointgoal.io"
        },
        "license": {
            "name": "Apache 2.0 License",
            "url": "https://github.com/rookie-ninja/rk-entry/blob/master/LICENSE.txt"
        },
        "version": "2.0"
    },
    "paths": {
        "/rk/v1/alive": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get application liveness status",
                "operationId": "2",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rkentry.aliveResp"
                        }
                    }
                }
            }
        },
        "/rk/v1/gc": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Trigger Gc",
                "operationId": "3",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rkentry.gcResp"
                        }
                    }
                }
            }
        },
        "/rk/v1/info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get application and process info",
                "operationId": "4",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rkentry.ProcessInfo"
                        }
                    }
                }
            }
        },
        "/rk/v1/ready": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get application readiness status",
                "operationId": "1",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rkentry.readyResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "rkentry.ProcessInfo": {
            "type": "object",
            "properties": {
                "appName": {
                    "type": "string"
                },
                "az": {
                    "type": "string"
                },
                "cpuInfo": {
                    "$ref": "#/definitions/rkos.CpuInfo"
                },
                "description": {
                    "type": "string"
                },
                "docsUrl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "domain": {
                    "type": "string"
                },
                "gid": {
                    "type": "string"
                },
                "goEnvInfo": {
                    "$ref": "#/definitions/rkos.GoEnvInfo"
                },
                "homeUrl": {
                    "type": "string"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "maintainers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "memInfo": {
                    "$ref": "#/definitions/rkos.MemInfo"
                },
                "netInfo": {
                    "$ref": "#/definitions/rkos.NetInfo"
                },
                "osInfo": {
                    "$ref": "#/definitions/rkos.OsInfo"
                },
                "realm": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "upTimeSec": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "rkentry.aliveResp": {
            "type": "object",
            "properties": {
                "alive": {
                    "type": "boolean"
                }
            }
        },
        "rkentry.gcResp": {
            "type": "object",
            "properties": {
                "memStatAfterGc": {
                    "$ref": "#/definitions/rkos.MemInfo"
                },
                "memStatBeforeGc": {
                    "$ref": "#/definitions/rkos.MemInfo"
                }
            }
        },
        "rkentry.readyResp": {
            "type": "object",
            "properties": {
                "ready": {
                    "type": "boolean"
                }
            }
        },
        "rkos.CpuInfo": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                }
            }
        },
        "rkos.GoEnvInfo": {
            "type": "object",
            "properties": {
                "goArch": {
                    "type": "string"
                },
                "goos": {
                    "type": "string"
                },
                "routinesCount": {
                    "type": "integer"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "rkos.MemInfo": {
            "type": "object",
            "properties": {
                "forceGcCount": {
                    "type": "integer"
                },
                "gcCountTotal": {
                    "type": "integer"
                },
                "lastGcTimestamp": {
                    "type": "string"
                },
                "memAllocByte": {
                    "type": "integer"
                },
                "memUsedMb": {
                    "type": "integer"
                },
                "memUsedPercentage": {
                    "type": "number"
                },
                "sysAllocByte": {
                    "type": "integer"
                }
            }
        },
        "rkos.NetInfo": {
            "type": "object",
            "properties": {
                "netInterface": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rkos.netInterface"
                    }
                }
            }
        },
        "rkos.OsInfo": {
            "type": "object",
            "properties": {
                "arch": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                }
            }
        },
        "rkos.netInterface": {
            "type": "object",
            "properties": {
                "addrs": {
                    "description": "A list of unicast interface addresses for a specific interface.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "flags": {
                    "description": "e.g., FlagUp, FlagLoopback, FlagMulticast",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hardwareAddr": {
                    "description": "IEEE MAC-48, EUI-48 and EUI-64 form",
                    "type": "string"
                },
                "mtu": {
                    "description": "maximum transmission unit",
                    "type": "integer"
                },
                "multicastAddrs": {
                    "description": "A list of multicast, joined group addresses for a specific interface",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "e.g., \"en0\", \"lo0\", \"eth0.100\"",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "JWT": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}